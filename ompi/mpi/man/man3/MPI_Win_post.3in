.\" -*- nroff -*-
.\" Copyright 2010 Cisco Systems, Inc.  All rights reserved.
.\" Copyright 2007-2008 Sun Microsystems, Inc.
.\" Copyright (c) 1996 Thinking Machines Corporation
.\" Copyright (c) 2020      Google, LLC. All rights reserved.
.\" $COPYRIGHT$
.TH MPI_Win_post 3 "#OMPI_DATE#" "#PACKAGE_VERSION#" "#PACKAGE_NAME#"
.SH NAME
\fBMPI_Win_post\fP \- Starts an RMA exposure epoch for the local window associated with \fIwin\fP

.SH SYNTAX
.ft R
.SH C Syntax
.nf
#include <mpi.h>
int MPI_Win_post(MPI_Group \fIgroup\fP, int assert, MPI_Win \fIwin\fP)

.fi
.SH Fortran Syntax
.nf
USE MPI
! or the older form: INCLUDE 'mpif.h'
MPI_WIN_POST(\fIGROUP, ASSERT, WIN, IERROR\fP)
	INTEGER GROUP, ASSERT, WIN, IERROR

.fi
.SH Fortran 2008 Syntax
.nf
USE mpi_f08
MPI_Win_post(\fIgroup\fP, \fIassert\fP, \fIwin\fP, \fIierror\fP)
	TYPE(MPI_Group), INTENT(IN) :: \fIgroup\fP
	INTEGER, INTENT(IN) :: \fIassert\fP
	TYPE(MPI_Win), INTENT(IN) :: \fIwin\fP
	INTEGER, OPTIONAL, INTENT(OUT) :: \fIierror\fP

.fi
.SH INPUT PARAMETERS
.ft R
.TP 1i
group
The group of origin processes (handle)
.TP 1i
assert
Program assertion (integer)
.TP 1i
win
Window object (handle)

.SH OUTPUT PARAMETERS
.ft R
.TP 1i
IERROR
Fortran only: Error status (integer).

.SH DESCRIPTION

Starts an RMA exposure epoch for the local window associated with \fIwin\fP. Only the processes belonging to \fIgroup\fP should access the window with RMA calls on \fIwin\fP during this epoch. Each process in \fIgroup\fP must issue a matching call to MPI_Win_start. MPI_Win_post does not block.
.sp
The \fIassert\fP argument is used to provide assertions on the context of the call that may be used for various optimizations. A value of \fIassert\fP = 0 is always valid. The following assertion values are supported:
.ft R
.TP 1i
MPI_MODE_NOCHECK
The matching calls to MPI_Win_start have not yet occurred on any origin processes when this call is made. This assertion must be present for all matching MPI_Win_start calls if used.
.TP 1i
MPI_MODE_NOSTORE
Informs that the local window was not updated by local stores or get calls in the preceding epoch.
.TP 1i
MPI_MODE_NOPUT
Informs that the local window will not be updated by put or accummulate calls until the ensuing wait synchronization.
.sp

.SH ERRORS
Almost all MPI routines return an error value; C routines as the value of the function and Fortran routines in the last argument.
.sp
Before the error value is returned, the current MPI error handler is
called. By default, this error handler aborts the MPI job, except for I/O function errors. The error handler may be changed with MPI_Win_set_errhandler; the predefined error handler MPI_ERRORS_RETURN may be used to cause error values to be returned. Note that MPI does not guarantee that an MPI program can continue past an error.

.SH SEE ALSO
MPI_Win_start
MPI_Win_wait
.br



